defmodule OpCodesUtil do

  require OpCodes

  def mnemonic(OpCodes._STOP) do "STOP" end
  def mnemonic(OpCodes._ADD) do "ADD" end
  def mnemonic(OpCodes._MUL) do "MUL" end
  def mnemonic(OpCodes._SUB) do "SUB" end
  def mnemonic(OpCodes._DIV) do "DIV" end
  def mnemonic(OpCodes._SDIV) do "SDIV" end
  def mnemonic(OpCodes._MOD) do "MOD" end
  def mnemonic(OpCodes._SMOD) do "SMOD" end
  def mnemonic(OpCodes._ADDMOD) do "ADDMOD" end
  def mnemonic(OpCodes._MULMOD) do "MULMOD" end
  def mnemonic(OpCodes._EXP) do "EXP" end
  def mnemonic(OpCodes._SIGNEXTEND) do "SIGNEXTEND" end
  def mnemonic(OpCodes._LT) do "LT" end
  def mnemonic(OpCodes._GT) do "GT" end
  def mnemonic(OpCodes._SLT) do "SLT" end
  def mnemonic(OpCodes._SGT) do "SGT" end
  def mnemonic(OpCodes._SEQ) do "SEQ" end
  def mnemonic(OpCodes._ISZERO) do "ISZERO" end
  def mnemonic(OpCodes._AND) do "AND" end
  def mnemonic(OpCodes._OR) do "OR" end
  def mnemonic(OpCodes._XOR) do "XOR" end
  def mnemonic(OpCodes._NOT) do "NOT" end
  def mnemonic(OpCodes._BYTE) do "BYTE" end
  def mnemonic(OpCodes._SHA3) do "SHA3" end
  def mnemonic(OpCodes._ADDRESS) do "ADDRESS" end
  def mnemonic(OpCodes._BALANCE) do "BALANCE" end
  def mnemonic(OpCodes._ORIGIN) do "ORIGIN" end
  def mnemonic(OpCodes._CALLER) do "CALLER" end
  def mnemonic(OpCodes._CALLVALUE) do "CALLVALUE" end
  def mnemonic(OpCodes._CALLDATALOAD) do "CALLDATALOAD" end
  def mnemonic(OpCodes._CALLDATASIZE) do "CALLDATASIZE" end
  def mnemonic(OpCodes._CALLDATACOPY) do "CALLDATACOPY" end
  def mnemonic(OpCodes._CODESIZE) do "CODESIZE" end
  def mnemonic(OpCodes._CODECOPY) do "CODECOPY" end
  def mnemonic(OpCodes._GASPRICE) do "GASPRICE" end
  def mnemonic(OpCodes._EXTCODESIZE) do "EXTCODESIZE" end
  def mnemonic(OpCodes._EXTCODECOPY) do "EXTCODECOPY" end
  #def mnemonic(OpCodes._RETURNDATASIZE) do "RETURNDATASIZE" end
  #def mnemonic(OpCodes._RETURNDATACOPY) do "RETURNDATACOPY" end
  def mnemonic(OpCodes._BLOCKHASH) do "BLOCKHASH" end
  def mnemonic(OpCodes._COINBASE) do "COINBASE" end
  def mnemonic(OpCodes._TIMESTAMP) do "TIMESTAMP" end
  def mnemonic(OpCodes._NUMBER) do "NUMBER" end
  def mnemonic(OpCodes._DIFFICULTY) do "DIFFICULTY" end
  def mnemonic(OpCodes._GASLIMIT) do "GASLIMIT" end
  def mnemonic(OpCodes._POP) do "POP" end
  def mnemonic(OpCodes._MLOAD) do "MLOAD" end
  def mnemonic(OpCodes._MSTORE) do "MSTORE" end
  def mnemonic(OpCodes._MSTORE8) do "MSTORE8" end
  def mnemonic(OpCodes._SLOAD) do "SLOAD" end
  def mnemonic(OpCodes._SSTORE) do "SSTORE" end
  def mnemonic(OpCodes._JUMP) do "JUMP" end
  def mnemonic(OpCodes._JUMPI) do "JUMPI" end
  def mnemonic(OpCodes._PC) do "PC" end
  def mnemonic(OpCodes._MSIZE) do "MSIZE" end
  def mnemonic(OpCodes._GAS) do "GAS" end
  def mnemonic(OpCodes._JUMPDEST) do "JUMPDEST" end
  def mnemonic(OpCodes._PUSH1) do "PUSH1" end
  def mnemonic(OpCodes._PUSH2) do "PUSH2" end
  def mnemonic(OpCodes._PUSH3) do "PUSH3" end
  def mnemonic(OpCodes._PUSH4) do "PUSH4" end
  def mnemonic(OpCodes._PUSH5) do "PUSH5" end
  def mnemonic(OpCodes._PUSH6) do "PUSH6" end
  def mnemonic(OpCodes._PUSH7) do "PUSH7" end
  def mnemonic(OpCodes._PUSH8) do "PUSH8" end
  def mnemonic(OpCodes._PUSH9) do "PUSH9" end
  def mnemonic(OpCodes._PUSH10) do "PUSH10" end
  def mnemonic(OpCodes._PUSH11) do "PUSH11" end
  def mnemonic(OpCodes._PUSH12) do "PUSH12" end
  def mnemonic(OpCodes._PUSH13) do "PUSH13" end
  def mnemonic(OpCodes._PUSH14) do "PUSH14" end
  def mnemonic(OpCodes._PUSH15) do "PUSH15" end
  def mnemonic(OpCodes._PUSH16) do "PUSH16" end
  def mnemonic(OpCodes._PUSH17) do "PUSH17" end
  def mnemonic(OpCodes._PUSH18) do "PUSH18" end
  def mnemonic(OpCodes._PUSH19) do "PUSH19" end
  def mnemonic(OpCodes._PUSH20) do "PUSH20" end
  def mnemonic(OpCodes._PUSH21) do "PUSH21" end
  def mnemonic(OpCodes._PUSH22) do "PUSH22" end
  def mnemonic(OpCodes._PUSH23) do "PUSH23" end
  def mnemonic(OpCodes._PUSH24) do "PUSH24" end
  def mnemonic(OpCodes._PUSH25) do "PUSH25" end
  def mnemonic(OpCodes._PUSH26) do "PUSH26" end
  def mnemonic(OpCodes._PUSH27) do "PUSH27" end
  def mnemonic(OpCodes._PUSH28) do "PUSH28" end
  def mnemonic(OpCodes._PUSH29) do "PUSH29" end
  def mnemonic(OpCodes._PUSH30) do "PUSH30" end
  def mnemonic(OpCodes._PUSH31) do "PUSH31" end
  def mnemonic(OpCodes._PUSH32) do "PUSH32" end
  def mnemonic(OpCodes._DUP1) do "DUP1" end
  def mnemonic(OpCodes._DUP2) do "DUP2" end
  def mnemonic(OpCodes._DUP3) do "DUP3" end
  def mnemonic(OpCodes._DUP4) do "DUP4" end
  def mnemonic(OpCodes._DUP5) do "DUP5" end
  def mnemonic(OpCodes._DUP6) do "DUP6" end
  def mnemonic(OpCodes._DUP7) do "DUP7" end
  def mnemonic(OpCodes._DUP8) do "DUP8" end
  def mnemonic(OpCodes._DUP9) do "DUP9" end
  def mnemonic(OpCodes._SWAP1) do "SWAP1" end
  def mnemonic(OpCodes._SWAP2) do "SWAP2" end
  def mnemonic(OpCodes._SWAP3) do "SWAP3" end
  def mnemonic(OpCodes._SWAP4) do "SWAP4" end
  def mnemonic(OpCodes._SWAP5) do "SWAP5" end
  def mnemonic(OpCodes._SWAP6) do "SWAP6" end
  def mnemonic(OpCodes._SWAP7) do "SWAP7" end
  def mnemonic(OpCodes._SWAP8) do "SWAP8" end
  def mnemonic(OpCodes._SWAP9) do "SWAP9" end
  def mnemonic(OpCodes._SWAP10) do "SWAP10" end
  def mnemonic(OpCodes._SWAP11) do "SWAP11" end
  def mnemonic(OpCodes._SWAP12) do "SWAP12" end
  def mnemonic(OpCodes._SWAP13) do "SWAP13" end
  def mnemonic(OpCodes._SWAP14) do "SWAP14" end
  def mnemonic(OpCodes._SWAP15) do "SWAP15" end
  def mnemonic(OpCodes._SWAP16) do "SWAP16" end
  def mnemonic(OpCodes._LOG0) do "LOG0" end
  def mnemonic(OpCodes._LOG1) do "LOG1" end
  def mnemonic(OpCodes._LOG2) do "LOG2" end
  def mnemonic(OpCodes._LOG3) do "LOG3" end
  def mnemonic(OpCodes._LOG4) do "LOG4" end
  def mnemonic(OpCodes._CREATE) do "CREATE" end
  def mnemonic(OpCodes._CALL) do "CALL" end
  def mnemonic(OpCodes._CALLCODE) do "CALLCODE" end
  def mnemonic(OpCodes._RETURN) do "RETURN" end
  def mnemonic(OpCodes._DELEGATECALL) do "DELEGATECALL" end
  #def mnemonic(OpCodes._CALLBLACKBOX) do "CALLBLACKBOX" end
  #def mnemonic(OpCodes._STATICCALL) do "STATICCALL" end
  #def mnemonic(OpCodes._REVERT) do "REVERT" end
  #def mnemonic(OpCodes._INVALID) do "INVALID" end
  def mnemonic(OpCodes._SUICIDE) do "SUICIDE" end

end
